/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createRootRoute } from '@tanstack/react-router'

import { Route as IndexRouteImport } from './pages/index'
import { Route as RankingIndexRouteImport } from './pages/ranking/index'
import { Route as AuthRegisterRouteImport } from './pages/auth/register'
import { Route as AuthLoginIndexRouteImport } from './pages/auth/login/index'

const rootRouteImport = createRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RankingIndexRoute = RankingIndexRouteImport.update({
  id: '/ranking/',
  path: '/ranking/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/register': typeof AuthRegisterRoute
  '/ranking': typeof RankingIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/register': typeof AuthRegisterRoute
  '/ranking': typeof RankingIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/register': typeof AuthRegisterRoute
  '/ranking/': typeof RankingIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth/register' | '/ranking' | '/auth/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/register' | '/ranking' | '/auth/login'
  id: '__root__' | '/' | '/auth/register' | '/ranking/' | '/auth/login/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  RankingIndexRoute: typeof RankingIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ranking/': {
      id: '/ranking/'
      path: '/ranking'
      fullPath: '/ranking'
      preLoaderRoute: typeof RankingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  RankingIndexRoute: RankingIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
